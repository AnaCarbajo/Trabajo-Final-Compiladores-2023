/*-JSON es el nombre del axioma de la gram치tica-*/
COMPILER JSON

CHARACTERS
  letter    = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_".
  digit     = "0123456789".
  cr        = '\r'.
  lf        = '\n'.
  tab       = '\t'.  
  stringch  = ANY - '"' - '\\' - cr - lf.
  charch    = ANY - '\'' - '\\' - cr - lf.
  printable =  '\u0020' .. '\u007e'.
  escapech    = "bnfrt/" + '\\' + '"'.  
  hex       = "0123456789abcdefABCDEF".
  dot       = '.'.

TOKENS /*-Tokens: Palabras del c칩digo del programa,  representan terminales-*/
  colon     = ':'.
  comma     =  ','.
  lbrace    = '{'.
  rbrace    = '}'.
  lbracket  = '['.
  rbracket  = ']'.
  ident     = letter { letter | digit }.
  string_   = '"' { stringch | '\\' escapech | '\\' 'u' hex hex hex hex} '"'.
  badString = '"' { stringch | '\\' escapech } (cr | lf).
  integer_  = ['-'] digit {digit}.
  double_   = ['-'] digit {digit} (((dot digit {digit}) [('E' | 'e') [('+' | '-')] digit {digit}]) | (('E' | 'e') [('+' | '-')] digit {digit})).
  

IGNORE ' ' + '\r' + '\t' + '\n'

/*-La gram치tica es un conjunto de reglas que generan cadenas de caracteres,
un lenguaje es el conjunto de todas las posibles cadenas que pueden ser generadas por una gram치tica.-*/
PRODUCTIONS

JSON          =
(jsonobject | jsonarray).
jsonobject    = object.
jsonarray     = array.
object       = lbrace
                [
                objectelement
                {
                comma
                objectelement
                }
                ] 
                rbrace
                .
objectelement = string_
                colon
                value.
array         = lbracket
                [
                value 
                {
                comma
                value
                }
                ] 
                rbracket
                .
value         = string_
               | integer_
               | double_
               | object
               | array
               | "true"
               | "false"
               | "null"
               .

END JSON.